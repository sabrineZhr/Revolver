/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Probleme.Probleme;
import basedeconnaissances.BaseDeConnaissance;
import basedeconnaissances.Predicat;
import basedeconnaissances.Regle;
import static com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type.Int;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import resolveurdepb.Algorithme;
import resolveurdepb.Noeud;

/**
 *
 * @author BOUHMIDE-PC
 */
public class Interface extends javax.swing.JFrame {

    private int validF;	
    private int validR;
    private int validS;
    private String SourceF;
    private String SourceR;
    private ArrayList<Regle> regles;

    /**
     * Creates new form Interface
     */
    public Interface() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        Strategie = new javax.swing.ButtonGroup();
        ConfirmBut = new javax.swing.JButton();
        LabelRegle = new javax.swing.JLabel();
        Trace = new java.awt.TextArea();
        SourceRegle = new javax.swing.JTextField();
        LabelTrace = new javax.swing.JLabel();
        ChoisirRegle = new javax.swing.JButton();
        LabelInitial = new javax.swing.JLabel();
        BaseRegles = new java.awt.TextArea();
        Etat_initial = new java.awt.TextField();
        Save = new javax.swing.JButton();
        Strategie1 = new javax.swing.JRadioButton();
        Strategie2 = new javax.swing.JRadioButton();
        Etat_final = new java.awt.TextField();
        LabelFinal = new javax.swing.JLabel();
        Depth = new javax.swing.JSpinner();
        LabelDepth = new javax.swing.JLabel();
        Resultat = new java.awt.TextArea();
        LabelResult = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ConfirmBut.setText("OK");
        ConfirmBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmButActionPerformed(evt);
            }
        });

        LabelRegle.setText("Regles");

        Trace.setEditable(false);

        SourceRegle.setEditable(false);
        SourceRegle.setToolTipText("chemin du fichier");
        SourceRegle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SourceRegleActionPerformed(evt);
            }
        });

        LabelTrace.setText("Trace");

        ChoisirRegle.setText("...");
        ChoisirRegle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChoisirRegleActionPerformed(evt);
            }
        });

        LabelInitial.setText("Etat Initial");

        BaseRegles.setEditable(false);

        Save.setText("sauvegarder");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });

        Strategie.add(Strategie1);
        Strategie1.setSelected(true);
        Strategie1.setText("Profondeur");
        Strategie1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Strategie1StateChanged(evt);
            }
        });
        Strategie1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Strategie1ActionPerformed(evt);
            }
        });

        Strategie.add(Strategie2);
        Strategie2.setText("A*");
        Strategie2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Strategie2ActionPerformed(evt);
            }
        });

        LabelFinal.setText("Etat Final");

        LabelDepth.setText("Profondeur");
        LabelDepth.setToolTipText("");

        Resultat.setEditable(false);

        LabelResult.setText("Resultat");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(LabelRegle, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25)
                                .addComponent(SourceRegle, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(ChoisirRegle, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(BaseRegles, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Resultat, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabelResult, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Save)
                            .addComponent(LabelTrace, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Trace, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(LabelInitial, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Etat_initial, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LabelFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Etat_final, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Strategie1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Strategie2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LabelDepth)
                .addGap(18, 18, 18)
                .addComponent(Depth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ConfirmBut, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SourceRegle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ChoisirRegle, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelRegle, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BaseRegles, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(LabelInitial, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Etat_initial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Etat_final, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(LabelFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(Strategie1)
                                        .addComponent(Strategie2)
                                        .addComponent(LabelDepth)
                                        .addComponent(Depth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(ConfirmBut)))
                                .addGap(2, 2, 2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(LabelResult, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(LabelTrace, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Resultat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Trace, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE))
                .addGap(25, 25, 25)
                .addComponent(Save, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(101, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ConfirmButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmButActionPerformed
        String etat_initial = this.Etat_initial.getText();
        String etat_final = this.Etat_final.getText();
        Predicat p1=new Predicat();
        p1.extrairePredicat(etat_initial);
        
        Predicat p2= new Predicat();
        p2.extrairePredicat(etat_initial);
        Algorithme al = new Algorithme();
        BaseDeConnaissance bc = new BaseDeConnaissance();
        bc.setFichierFait(SourceR);
        
        Probleme p = new Probleme(bc,"pbCruches");
         Noeud node;
        if (this.Strategie1.isSelected()) {
            int depth=(int) this.Depth.getValue();
             node=al.Depth_First_Limited(p1, p2,depth,p);
        } else {
             node=al.A(p1, p2,p);
        }
        String result="";
        if(node!=null)
        {
        
             while (node.getParent()!=null) {
                 result="---"+node.getNombreRegle()/*+" cout: "+node.getH()*/+"--->"+node.getEtat().toString()+result;
                 node=node.getParent();
             }
             result=node.getEtat().toString()+result;}
        else{
            result="Result not found";
        }
             this.Resultat.setText(result);
             this.Trace.setText(al.trace);
        //Chainage_arriere c = new Chainage_arriere(SourceF,strat);
        //boolean test = c.Chainage(but, regles, faits);
        //this.Trace.setText(c.getTrace());
        
    }//GEN-LAST:event_ConfirmButActionPerformed

    private void SourceRegleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SourceRegleActionPerformed

    }//GEN-LAST:event_SourceRegleActionPerformed

    private void ChoisirRegleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChoisirRegleActionPerformed
        validR = jFileChooser1.showOpenDialog(Interface.this);
        if (validR == JFileChooser.APPROVE_OPTION) {
            this.SourceRegle.setText(jFileChooser1.getSelectedFile().getPath());
            SourceR = jFileChooser1.getSelectedFile().getPath();
             BaseDeConnaissance bc = new BaseDeConnaissance();
      
       bc.setFichierRegle(SourceR);
       
            
          
        }
    }//GEN-LAST:event_ChoisirRegleActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        validS = jFileChooser1.showSaveDialog(Interface.this);
        if (validS == JFileChooser.APPROVE_OPTION) {
            File f = jFileChooser1.getSelectedFile();
            if (!f.exists()) {
                try {
                    f.createNewFile();
                } catch (IOException ex) {
                    Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            FileWriter fichier;
            try {
                fichier = new FileWriter(f, true);
                BufferedWriter bw = new BufferedWriter(fichier);
                PrintWriter fichierSortie = new PrintWriter(bw);
                fichierSortie.println(this.Trace.getText());
                fichierSortie.println(this.Resultat.getText());
                fichierSortie.println("--------------------------------------");
                fichierSortie.close();
                bw.close();
                fichier.close();
            } catch (IOException ex) {
                Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_SaveActionPerformed

    private void Strategie1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Strategie1StateChanged
        if (this.Strategie1.isSelected()) {
            this.Depth.setVisible(true);
            this.LabelDepth.setVisible(true);
        } else {
            this.Depth.setVisible(false);
            this.LabelDepth.setVisible(false);
        }
    }//GEN-LAST:event_Strategie1StateChanged

    private void Strategie1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Strategie1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Strategie1ActionPerformed

    private void Strategie2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Strategie2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Strategie2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public void afficheRegle(Probleme p) {
        regles = p.getBaseConnaissance().chargementRegles();
        this.BaseRegles.setText("");
        String r;
        boolean test = false;
        for (Regle regle : regles) {
            if (!test) {
                this.BaseRegles.setText(regle.toString());
                test = true;
            } else {
                this.BaseRegles.setText(this.BaseRegles.getText() + "\n" + regle.toString());
            }
        }
    }

   

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.TextArea BaseRegles;
    private javax.swing.JButton ChoisirRegle;
    private javax.swing.JButton ConfirmBut;
    private javax.swing.JSpinner Depth;
    private java.awt.TextField Etat_final;
    private java.awt.TextField Etat_initial;
    private javax.swing.JLabel LabelDepth;
    private javax.swing.JLabel LabelFinal;
    private javax.swing.JLabel LabelInitial;
    private javax.swing.JLabel LabelRegle;
    private javax.swing.JLabel LabelResult;
    private javax.swing.JLabel LabelTrace;
    private java.awt.TextArea Resultat;
    private javax.swing.JButton Save;
    private javax.swing.JTextField SourceRegle;
    private javax.swing.ButtonGroup Strategie;
    private javax.swing.JRadioButton Strategie1;
    private javax.swing.JRadioButton Strategie2;
    private java.awt.TextArea Trace;
    private javax.swing.JFileChooser jFileChooser1;
    // End of variables declaration//GEN-END:variables
}
